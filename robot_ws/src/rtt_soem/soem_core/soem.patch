--- src/nicdrv.c	2010-04-10 16:06:30.000000000 +0200
+++ src/nicdrv.c	2011-04-21 10:55:35.000000000 +0200
@@ -208,31 +208,49 @@
 	}	
 	/* we use RAW packet socket, with packet type ETH_P_ECAT */
 	*psock = socket(PF_PACKET, SOCK_RAW, htons(ETH_P_ECAT));
+	if(*psock<0)
+	  printf("Failed to create socket: %s\n",strerror(-(*psock)));
 	timeout.tv_sec =  0;
 	timeout.tv_usec = 1000;
 	 
 	r = setsockopt(*psock, SOL_SOCKET, SO_RCVTIMEO, &timeout, sizeof(timeout));
+	if(r<0)
+	  printf("Failed to set option recvtimeo: %s\n",strerror(-r));
 	r = setsockopt(*psock, SOL_SOCKET, SO_SNDTIMEO, &timeout, sizeof(timeout));
+	if(r<0)
+	  printf("Failed to set option sndtimeo: %s\n",strerror(-r));
 	i = 1;
 	r = setsockopt(*psock, SOL_SOCKET, SO_DONTROUTE, &i, sizeof(i));
+	if(r<0)
+	  printf("Failed to set option dontroute: %s\n",strerror(-r));
+
 	/* connect socket to NIC by name */
 	strcpy(ifr.ifr_name, ifname);
 	r = ioctl(*psock, SIOCGIFINDEX, &ifr);
+	if(r<0)
+	  printf("Failed to get socket index: %s\n",strerror(-r));
 	ifindex = ifr.ifr_ifindex;
 	strcpy(ifr.ifr_name, ifname);
 	ifr.ifr_flags = 0;
 	/* reset flags of NIC interface */
 	r = ioctl(*psock, SIOCGIFFLAGS, &ifr);
+	if(r<0)
+	  printf("Failed to get socket flags: %s\n",strerror(-r));
 	/* set flags of NIC interface, here promiscuous and broadcast */
-	ifr.ifr_flags = ifr.ifr_flags || IFF_PROMISC || IFF_BROADCAST;
-	r = ioctl(*psock, SIOCGIFFLAGS, &ifr);
+	ifr.ifr_flags = ifr.ifr_flags | IFF_PROMISC | IFF_BROADCAST;
+	r = ioctl(*psock, SIOCSIFFLAGS, &ifr);
+	if(r<0)
+	  printf("Failed to set socket flags: %s\n",strerror(-r));
 	/* bind socket to protocol, in this case RAW EtherCAT */
 	sll.sll_family = AF_PACKET;
 	sll.sll_ifindex = ifindex;
 	sll.sll_protocol = htons(ETH_P_ECAT);
 	r = bind(*psock, (struct sockaddr *)&sll, sizeof(sll));
+	if(r<0)
+	  printf("Failed to bind socket: %s\n",strerror(-r));
+
 	/* get flags */
-	fl = fcntl(*psock, F_GETFL, 0);
+	//fl = fcntl(*psock, F_GETFL, 0);
 	/* set nodelay option, so make socket non-blocking */
 //	r = fcntl(*psock, F_SETFL, fl | O_NDELAY);
 	/* setup ethernet headers in tx buffers so we don't have to repeat it */
